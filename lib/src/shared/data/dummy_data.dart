import 'package:flutter/material.dart';

import '../models/_export_models.dart';

List<EstacaoTrabalhoModel> dummyEstacoesTrabalhoDS = [
  EstacaoTrabalhoModel(
    id: '01',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: 'Alcides Junqueira',
    ativo: false,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '02',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: 'Gabriel Junqueira',
    ativo: false,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '03',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '04',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '02',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '03',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
];
List<EstacaoTrabalhoModel> dummyEstacoesTrabalhoComuns = [
  EstacaoTrabalhoModel(
    id: '05',
    type: 'C',
    nomeEstacao: 'EN',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '06',
    type: 'C',
    nomeEstacao: 'EN',
    nome: 'Gabriel Junqueira',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '07',
    type: 'C',
    nomeEstacao: 'EN',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '05',
    type: 'C',
    nomeEstacao: 'EW',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '06',
    type: 'C',
    nomeEstacao: 'EW',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  EstacaoTrabalhoModel(
    id: '07',
    type: 'C',
    nomeEstacao: 'EW',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
];
List<SalaReuniaoModel> dummySalaReuniao = [
  SalaReuniaoModel(
    id: '01',
    type: 'DS',
    nomeSala: 'Sala',
    nome: 'Alcides Junqueira',
    ativo: false,
    icon: const Icon(
      Icons.meeting_room_rounded,
      size: 24,
      color: Color(0xFF0005AA),
    ),
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  SalaReuniaoModel(
    id: '02',
    type: 'DS',
    nomeSala: 'Sala',
    nome: 'Adilson Badaró',
    ativo: true,
    icon: const Icon(
      Icons.meeting_room_rounded,
      size: 24,
      color: Color(0xFF0005AA),
    ),
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
];

List<SalaReuniaoModel> dummyEstacionamento = [
  SalaReuniaoModel(
    id: '12',
    type: 'DS',
    nomeSala: 'G',
    nome: 'Alcides Junqueira',
    ativo: false,
    icon: const Icon(
      Icons.directions_car_rounded,
      size: 24,
      color: Color(0xFF0005AA),
    ),
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  SalaReuniaoModel(
    id: '13',
    type: 'DS',
    nomeSala: 'G',
    nome: 'Adilson Badaró',
    ativo: true,
    icon: const Icon(
      Icons.directions_car_rounded,
      size: 24,
      color: Color(0xFF0005AA),
    ),
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  SalaReuniaoModel(
    id: '14',
    type: 'DS',
    nomeSala: 'G',
    nome: 'Adilson Badaró',
    ativo: true,
    icon: const Icon(
      Icons.directions_car_rounded,
      size: 24,
      color: Color(0xFF0005AA),
    ),
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  SalaReuniaoModel(
    id: '15',
    type: 'DS',
    nomeSala: 'G',
    nome: 'Adilson Badaró',
    ativo: true,
    icon: const Icon(
      Icons.directions_car_rounded,
      size: 24,
      color: Color(0xFF0005AA),
    ),
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  SalaReuniaoModel(
    id: '16',
    type: 'DS',
    nomeSala: 'G',
    nome: 'Adilson Badaró',
    ativo: true,
    icon: const Icon(
      Icons.directions_car_rounded,
      size: 24,
      color: Color(0xFF0005AA),
    ),
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
];

List<AgenteModel> dummyAgentes = [
  AgenteModel(
    id: '01',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: 'Alcides Junqueira',
    ativo: true,
    icon: Icons.computer_rounded,
    // icon: const Icon(
    //   Icons.computer_rounded,
    //   size: 24,
    //   color: Color(0xFFC00000),
    // ),
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '02',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: 'Adilson Badaró',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '03',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: 'Gabriel Ribeiro',
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '08',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: 'Maria Melo',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
];

List<AgenteModel> dummyAgentes2 = [
  AgenteModel(
    id: '01',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: 'Gabriel Junqueira',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '02',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: null,
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '03',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: null,
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '04',
    type: 'DS',
    nomeEstacao: 'EN',
    nome: null,
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '02',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: null,
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '03',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: null,
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  AgenteModel(
    id: '05',
    type: 'C',
    nomeEstacao: 'EN',
    nome: 'Nicolas Coelho',
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  AgenteModel(
    id: '06',
    type: 'C',
    nomeEstacao: 'EN',
    nome: null,
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  AgenteModel(
    id: '07',
    type: 'C',
    nomeEstacao: 'EN',
    nome: null,
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  AgenteModel(
    id: '08',
    type: 'C',
    nomeEstacao: 'EN',
    nome: null,
    ativo: true,
    icon: Icons.computer_rounded,
    dataAgendamento: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  AgenteModel(
    id: '05',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: null,
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '06',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: null,
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '07',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: null,
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '07',
    type: 'DS',
    nomeEstacao: 'EW',
    nome: null,
    ativo: true,
    icon: Icons.desktop_windows_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
  AgenteModel(
    id: '01',
    type: 'DS',
    nomeEstacao: 'EL',
    nome: null,
    ativo: true,
    icon: Icons.desktop_mac_rounded,
    dataAgendamento: DateTime(2023, 09, 18),
    dataRegistro: DateTime(2023, 09, 18),
  ),
];

// List<UserModel> dummyUsers = [
//   UserModel(
//     nome: 'Gabriel',
//     sobrenome: 'Ribeiro',
//     email: 'gabriel.ribeiro@avancoinfo.com.br',
//     contato: '31971576632',
//     dataAdmissao: DateTime(2019, 09, 02),
//     cargo: 1,
//     contrato: 'Efetivado',
//     equipe: 'Marketing / Design System',
//     ativo: 1,
//     cadastro: 1,
//     senha: '',
//     confirmarSenha: '',
//     conhecimentos: '',
//     nivel: 1,
//     ramal: 1,
//     regime: '',
//     time: 3,
//     usuario: '',
//     id: null,
//   ),
//   UserModel(
//     nome: 'Leo',
//     sobrenome: 'Brummer',
//     email: 'leo.brummer@avancoinfo.com.br',
//     contato: '31971576632',
//     dataAdmissao: DateTime(2019, 09, 02),
//     cargo: 1,
//     contrato: 'Efetivado',
//     equipe: 'Marketing / Design System',
//     ativo: 1,
//     cadastro: '',
//     senha: '',
//     confirmarSenha: '',
//     conhecimentos: '',
//     nivel: 1,
//     ramal: 1,
//     regime: '',
//     time: 3,
//     usuario: '',
//     id: null,
//   ),
// ];

List<ExerciciosModel> dummyExercicios = [
  ExerciciosModel(
    id: 1,
    colaborador: 'Gabriel Ribeiro',
    supervisor: 'Luiz Vasconcelos',
    isAgendadas: false,
    exercicioInicial: DateTime(2022, 09, 01),
    exercicioFinal: DateTime(2023, 09, 02),
    dataLimite: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  ExerciciosModel(
    id: 1,
    colaborador: 'Gabriel Ribeiro',
    supervisor: 'Luiz Vasconcelos',
    isAgendadas: false,
    exercicioInicial: DateTime(2022, 09, 01),
    exercicioFinal: DateTime(2023, 09, 02),
    dataLimite: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  ExerciciosModel(
    id: 1,
    colaborador: 'Gabriel Ribeiro',
    supervisor: 'Luiz Vasconcelos',
    isAgendadas: false,
    exercicioInicial: DateTime(2022, 09, 01),
    exercicioFinal: DateTime(2023, 09, 02),
    dataLimite: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  ExerciciosModel(
    id: 1,
    colaborador: 'Gabriel Ribeiro',
    supervisor: 'Luiz Vasconcelos',
    isAgendadas: false,
    exercicioInicial: DateTime(2022, 09, 01),
    exercicioFinal: DateTime(2023, 09, 02),
    dataLimite: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
  ExerciciosModel(
    id: 1,
    colaborador: 'Gabriel Ribeiro',
    supervisor: 'Luiz Vasconcelos',
    isAgendadas: false,
    exercicioInicial: DateTime(2022, 09, 01),
    exercicioFinal: DateTime(2023, 09, 02),
    dataLimite: DateTime(2024, 08, 02),
    dataRegistro: DateTime(2023, 07, 27),
  ),
];
List<CategoriaModel> dummyCategorias = [
  CategoriaModel(
    icon: const Icon(
      Icons.assignment_ind_rounded,
      size: 24,
      color: Color(0XFF0005AA),
    ),
    nome: 'Dados Pessoais',
    routePage: '/FeriasPage',
  ),
  CategoriaModel(
    icon: const Icon(
      Icons.airplane_ticket_rounded,
      size: 24,
      color: Color(0XFF0005AA),
    ),
    nome: 'Férias',
    routePage: '/FeriasPage',
  ),
  CategoriaModel(
    icon: const Icon(
      Icons.list_alt_rounded,
      size: 24,
      color: Color(0XFF0005AA),
    ),
    nome: 'Folha de Ponto',
    routePage: '/FeriasPage',
  ),
  CategoriaModel(
    icon: const Icon(
      Icons.receipt_rounded,
      size: 24,
      color: Color(0XFF0005AA),
    ),
    nome: 'Contra-check',
    routePage: '/FeriasPage',
  ),
];
List<CategoriaModel> dummyAdmCategorias = [
  CategoriaModel(
    icon: const Icon(
      Icons.groups_rounded,
      size: 24,
      color: Color(0XFF0005AA),
    ),
    nome: 'Grupo de Usuários',
    routePage: '/UserPage',
  ),
  CategoriaModel(
    icon: const Icon(
      Icons.group_rounded,
      size: 24,
      color: Color(0XFF0005AA),
    ),
    nome: 'Squads',
    routePage: '/UserPage',
  ),
  CategoriaModel(
    icon: const Icon(
      Icons.badge_rounded,
      size: 24,
      color: Color(0XFF0005AA),
    ),
    nome: 'Cargos',
    routePage: '/UserPage',
  ),
  CategoriaModel(
    icon: const Icon(
      Icons.manage_accounts_rounded,
      size: 24,
      color: Color(0XFF0005AA),
    ),
    nome: 'Usuarios',
    routePage: '/UserPage',
  ),
];

List<String> dummyLoja = <String>['L1', 'L2', 'L3', 'L3'];
List<String> dummyModelo = <String>['Todos Modelos', 'NF-e', 'NFC-e'];
List<String> dummyProduto = <String>['P1', 'P2', 'P3', 'p4'];
